service: kl

projectDir: ../
variablesResolutionMode: 20210326
plugins:
  - serverless-iam-roles-per-function
  - serverless-step-functions
  - serverless-better-credentials
provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'Klayers-defaultp38'}
  region: ${file(../Terraform/terraform.tfvars.json):aws_region.${self:provider.stage}}
  profile: ${file(../Terraform/terraform.tfvars.json):aws_profile.${self:provider.stage}}
  versionFunctions: false
  logRetentionInDays: 90
  environment:
    STAGE: ${self:provider.stage}
    LOG_LEVEL: INFO
    DB_NAME: ${self:custom.dbName}
    BUCKET_NAME: ${self:custom.s3LayersName}
    POWERTOOLS_SERVICE_NAME: ${self:provider.stage}
    LAMBDA_LAYER_PREFIX: "Klayers-"
    CONFIG_BUCKET: ${self:custom.configBucketName}
    COMMON_SERVICE_URL: ${ssm:/common-service/${self:provider.stage}/CommonServiceApi/URL}
  logs:
    httpApi: true
  httpApi:
    cors: true
  eventBridge:
    useCloudFormation: true
  
custom:
  # Env
  awsRegion: ${self:provider.region} 
  pipelineName: ${self:service}-${self:provider.stage}-pipeline

  # S3
  s3LayersName: ${ssm:/${self:service}/${self:provider.stage}/layers_bucket/name}
  s3LayersArn: ${ssm:/${self:service}/${self:provider.stage}/layers_bucket/arn}

  # DynamoDB
  dbName: ${ssm:/${self:service}/${self:provider.stage}/db-ver2/name}
  dbArn: ${ssm:/${self:service}/${self:provider.stage}/db-ver2/arn}
  dbStreamLabel: ${ssm:/${self:service}/${self:provider.stage}/db-ver2/stream/label}
  dbStreamArn: ${ssm:/${self:service}/${self:provider.stage}/db-ver2/stream/arn}
  
  # Slack
  slackTokenParameter: /${self:service}}/${self:provider.stage}/slack_token

  # Cloudformation
  apiCertArn: ${ssm:/${self:service}/${self:provider.stage}/api/cert/arn}
  apiDomainName: ${ssm:/${self:service}/${self:provider.stage}/api/domain_name}
  
  # Config bucket
  configBucketArn: ${ssm:/kl/${self:provider.stage}/config_bucket/arn}
  configBucketName: ${ssm:/kl/${self:provider.stage}/config_bucket/name}

  # Cron for Invoke Pipelines
  cron_expression_invoke_pipelines: ${file(../Terraform/terraform.tfvars.json):cron_expression_invoke_pipelines.${self:provider.stage}}
  
functions:
  - ${file(01_invoke_pipelines/invoke_pipelines.yml)}
  - ${file(02_pipeline/pipeline.yml)}
  - ${file(02_pipeline/pipeline_build_containers.yml)}
  - ${file(04_stream_processor/streams.yml)}
  - ${file(05_slack_notification/slack.yml)}

stepFunctions:
  stateMachines:
    pipeline:
      ${file(state_machines/02_pipeline.yml)}

package:
  exclude:
    - package-lock.json
    - package.json
    - node_modules/**
    - serverless.yml
    - .gitignore
    - .serverless/**
    - sls_components/**
    - README.MD

